# Generated by Django 5.2.4 on 2025-07-23 16:07

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'db_table': 'departments',
            },
        ),
        migrations.CreateModel(
            name='FeedbackTheme',
            fields=[
                ('theme_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('theme_name', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Feedback Theme',
                'verbose_name_plural': 'Feedback Themes',
                'db_table': 'feedback_themes',
            },
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('medication_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('dosage', models.CharField(max_length=50)),
                ('frequency', models.FloatField()),
            ],
            options={
                'verbose_name': 'Medication',
                'verbose_name_plural': 'Medications',
                'db_table': 'medications',
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('prescription_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('general_notes', models.TextField(blank=True)),
                ('appointment_id', models.UUIDField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Prescription',
                'verbose_name_plural': 'Prescriptions',
                'db_table': 'prescriptions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['appointment_id'], name='prescriptio_appoint_6d01d6_idx')],
            },
        ),
        migrations.CreateModel(
            name='PrescriptionMedication',
            fields=[
                ('prescription_medication_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('frequency', models.FloatField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('instructions', models.TextField(blank=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedback.medication')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to='feedback.prescription')),
            ],
            options={
                'verbose_name': 'Prescription Medication',
                'verbose_name_plural': 'Prescription Medications',
                'db_table': 'prescription_medications',
            },
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('reminder_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('channel', models.CharField(choices=[('sms', 'SMS'), ('voice', 'Voice Call'), ('whatsapp', 'WhatsApp')], max_length=20)),
                ('scheduled_time', models.DateTimeField()),
                ('send_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('message_content', models.TextField()),
                ('language', models.CharField(default='fr', max_length=10)),
                ('patient_id', models.UUIDField()),
                ('prescription_id', models.UUIDField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Reminder',
                'verbose_name_plural': 'Reminders',
                'db_table': 'reminders',
                'ordering': ['scheduled_time'],
                'indexes': [models.Index(fields=['patient_id'], name='reminders_patient_f08f32_idx'), models.Index(fields=['scheduled_time'], name='reminders_schedul_f9839e_idx'), models.Index(fields=['status'], name='reminders_status_9617ae_idx')],
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appointment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scheduled_date', models.DateField()),
                ('time', models.TimeField()),
                ('type', models.CharField(max_length=50)),
                ('status', models.CharField(default='scheduled', max_length=20)),
                ('patient_id', models.UUIDField()),
                ('professional_id', models.UUIDField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedback.department')),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'db_table': 'appointments',
                'ordering': ['scheduled_date', 'time'],
                'indexes': [models.Index(fields=['patient_id'], name='appointment_patient_75a4eb_idx'), models.Index(fields=['professional_id'], name='appointment_profess_480d0b_idx'), models.Index(fields=['scheduled_date'], name='appointment_schedul_8c112d_idx')],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('input_type', models.CharField(choices=[('text', 'Text'), ('audio', 'Audio')], default='text', max_length=10)),
                ('language', models.CharField(choices=[('fr', 'Français'), ('en', 'English'), ('dua', 'Dua'), ('bas', 'Bas'), ('ewo', 'Ewo')], default='fr', max_length=10)),
                ('description', models.TextField()),
                ('rating', models.IntegerField(choices=[(1, '1 - Très insatisfait'), (2, '2 - Insatisfait'), (3, '3 - Neutre'), (4, '4 - Satisfait'), (5, '5 - Très satisfait')])),
                ('patient_id', models.UUIDField()),
                ('department_id', models.UUIDField()),
                ('sentiment', models.CharField(blank=True, choices=[('positive', 'Positif'), ('negative', 'Négatif'), ('neutral', 'Neutre')], max_length=20, null=True)),
                ('sentiment_positive_score', models.FloatField(blank=True, help_text='Score positif (0-100)', null=True)),
                ('sentiment_negative_score', models.FloatField(blank=True, help_text='Score négatif (0-100)', null=True)),
                ('sentiment_neutral_score', models.FloatField(blank=True, help_text='Score neutre (0-100)', null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('theme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='feedback.feedbacktheme')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'db_table': 'feedbacks',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['patient_id'], name='feedbacks_patient_eb3a37_idx'), models.Index(fields=['created_at'], name='feedbacks_created_1c526e_idx')],
            },
        ),
    ]
